{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_app_Header = _resolveComponent(\"app-Header\");\n  const _component_RouterView = _resolveComponent(\"RouterView\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <app-Header v-show=\\\"$route.path == '/index'?$route.meta.show : true\\\"></app-Header> \"), _createVNode(_component_app_Header), _createCommentVNode(\" <RouterView v-slot=\\\"{ Component }\\\">\\r\\n    <keep-alive>\\r\\n      <component :is=\\\"Component\\\" v-if=\\\"$route.meta.keepAlive\\\" />\\r\\n    </keep-alive>\\r\\n    <component :is=\\\"Component\\\" v-if=\\\"!$route.meta.keepAlive\\\" />\\r\\n  </RouterView> \"), _createVNode(_component_RouterView)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode","_createVNode","_component_app_Header","_component_RouterView"],"sources":["D:\\vue3\\video\\src\\App.vue"],"sourcesContent":["<template>\r\n  <!-- <app-Header v-show=\"$route.path == '/index'?$route.meta.show : true\"></app-Header> -->\r\n  <app-Header></app-Header>\r\n  <!-- <RouterView v-slot=\"{ Component }\">\r\n    <keep-alive>\r\n      <component :is=\"Component\" v-if=\"$route.meta.keepAlive\" />\r\n    </keep-alive>\r\n    <component :is=\"Component\" v-if=\"!$route.meta.keepAlive\" />\r\n  </RouterView> -->\r\n  <RouterView></RouterView>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { RouterView } from 'vue-router';\r\nimport { ref } from 'vue'\r\nimport { mapState } from \"vuex\";\r\n\r\n\r\nimport { provide } from \"vue\";\r\nimport * as echarts from \"echarts\";\r\n\r\n\r\nimport Header from '@/components/aheader.vue'\r\n// const inputName = ref(\"选择视频\")\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    RouterView,\r\n    appHeader: Header\r\n  },\r\n  setup() {\r\n    provide('echarts', echarts)\r\n  },\r\n  data() {\r\n    return {\r\n      appimg: ''\r\n    }\r\n  },\r\n  created() {\r\n\r\n    this.$store.commit(\"init_user\");\r\n  },\r\n  computed: {\r\n\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  position: relative;\r\n  height: 100vh;\r\n}\r\n\r\nbody {\r\n  margin: 0px;\r\n  padding: 0px;\r\n  background: rgb(14, 14, 16);\r\n}\r\n</style>\r\n"],"mappings":";;;;6DACEA,mBAAA,0FAA2F,EAC3FC,YAAA,CAAyBC,qBAAA,GACzBF,mBAAA,sPAKiB,EACjBC,YAAA,CAAyBE,qBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}