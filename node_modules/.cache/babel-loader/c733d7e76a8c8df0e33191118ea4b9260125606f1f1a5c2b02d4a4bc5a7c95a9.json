{"ast":null,"code":"import { createElementVNode as _createElementVNode, KeepAlive as _KeepAlive, openBlock as _openBlock, createBlock as _createBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7271a9ca\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"video-container\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = {\n  class: \"control-box\"\n};\nconst _hoisted_4 = {\n  class: \"control\"\n};\nconst _hoisted_5 = {\n  class: \"left-grid\"\n};\nconst _hoisted_6 = {\n  class: \"play-cont\"\n};\nconst _hoisted_7 = {\n  class: \"play-icon\"\n};\nconst _hoisted_8 = {\n  class: \"player-time\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \" / \", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  class: \"right-grid\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(), _createBlock(_KeepAlive, null, [_createElementVNode(\"video\", {\n    style: {\n      \"height\": \"90vh\"\n    },\n    ref: \"videoRef\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.toggleVideo && $setup.toggleVideo(...args)),\n    preload: \"metadata\",\n    onTimeupdate: _cache[1] || (_cache[1] = (...args) => $setup.updateProgress && $setup.updateProgress(...args)),\n    onLoadedmetadata: _cache[2] || (_cache[2] = (...args) => $setup.setDuration && $setup.setDuration(...args))\n  }, [_createElementVNode(\"source\", {\n    src: $props.mp4Url,\n    type: \"video/mp4\"\n  }, null, 8 /* PROPS */, _hoisted_2)], 544 /* HYDRATE_EVENTS, NEED_PATCH */)], 1024 /* DYNAMIC_SLOTS */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n    class: \"progress-box\",\n    onMouseover: _cache[5] || (_cache[5] = $event => $setup.isShow = true),\n    onMouseleave: _cache[6] || (_cache[6] = $event => $setup.isShow = false)\n  }, [_createElementVNode(\"div\", {\n    ref: \"bar_cont\",\n    class: _normalizeClass([\"progress-bar-container\", {\n      active: $setup.isShow\n    }]),\n    onMousedown: _cache[4] || (_cache[4] = (...args) => $setup.handleMouseDown && $setup.handleMouseDown(...args))\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"progress-bar\", {\n      active: $setup.isShow\n    }]),\n    style: _normalizeStyle({\n      width: $setup.state.progressBarWidth + '%'\n    })\n  }, null, 6 /* CLASS, STYLE */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"progress-thumb\", {\n      active: $setup.isShow\n    }]),\n    style: _normalizeStyle({\n      left: $setup.state.progressBarWidth + '%'\n    }),\n    onMousedown: _cache[3] || (_cache[3] = (...args) => $setup.startDrag && $setup.startDrag(...args))\n  }, null, 38 /* CLASS, STYLE, HYDRATE_EVENTS */)], 34 /* CLASS, HYDRATE_EVENTS */)], 32 /* HYDRATE_EVENTS */), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", _hoisted_7, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"play-icon\", {\n      'pause-icon': $setup.isplayer\n    }])\n  }, null, 2 /* CLASS */)])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"span\", null, _toDisplayString($setup.formattedCurrentTime), 1 /* TEXT */), _hoisted_9, _createElementVNode(\"span\", null, _toDisplayString($setup.formattedDuration), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"span\", null, _toDisplayString($props.inNum), 1 /* TEXT */)])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createBlock","_KeepAlive","style","ref","onClick","_cache","args","$setup","toggleVideo","preload","onTimeupdate","updateProgress","onLoadedmetadata","setDuration","src","$props","mp4Url","type","_hoisted_3","_hoisted_4","onMouseover","$event","isShow","onMouseleave","_normalizeClass","active","onMousedown","handleMouseDown","_normalizeStyle","width","state","progressBarWidth","left","startDrag","_hoisted_5","_hoisted_6","_hoisted_7","isplayer","_hoisted_8","_toDisplayString","formattedCurrentTime","_hoisted_9","formattedDuration","_hoisted_10","inNum"],"sources":["D:\\vue3\\video\\src\\components\\video.vue"],"sourcesContent":["<template>\r\n    <div class=\"video-container\">\r\n        <keep-alive>\r\n            <video style=\"height: 90vh;\" ref=\"videoRef\" @click=\"toggleVideo\" preload=\"metadata\"\r\n                @timeupdate=\"updateProgress\" @loadedmetadata=\"setDuration\">\r\n                <source :src=\"mp4Url\" type=\"video/mp4\" />\r\n            </video>\r\n        </keep-alive>\r\n        <div class=\"control-box\">\r\n            <div class=\"control\">\r\n                <div class=\"progress-box\" @mouseover=\"isShow = true\" @mouseleave=\"isShow = false\">\r\n                    <div ref=\"bar_cont\" class=\"progress-bar-container\" :class=\"{ active: isShow }\"\r\n                        @mousedown=\"handleMouseDown\">\r\n                        <div class=\"progress-bar\" :style=\"{ width: state.progressBarWidth + '%' }\"\r\n                            :class=\"{ active: isShow }\"></div>\r\n                        <div class=\"progress-thumb\" :style=\"{ left: state.progressBarWidth + '%' }\"\r\n                            @mousedown=\"startDrag\" :class=\"{ active: isShow, }\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"left-grid\">\r\n                    <div class=\"play-cont\">\r\n                        <span class=\"play-icon\">\r\n                            <div class=\"play-icon\" :class=\"{ 'pause-icon': isplayer }\"></div>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"player-time\">\r\n                        <span>{{ formattedCurrentTime }}</span>\r\n                        <span> / </span>\r\n                        <span>{{ formattedDuration }}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-grid\">\r\n                    <span>{{ inNum }}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nimport { number } from 'echarts';\r\nimport { ref, reactive, watch, onMounted, computed, onUnmounted, onBeforeUnmount, } from 'vue';\r\n\r\nexport default ({\r\n    // props: ['mp4Url', 'isplay', 'inNum'],\r\n    props: {\r\n        mp4Url: String,\r\n        isplay: Number,\r\n        inNum: Number\r\n    },\r\n    setup(props) {\r\n        const isShow = ref(false)\r\n        const bar_cont = ref(null)\r\n        const videoRef = ref(null);\r\n        const isplayer = ref(false); // 使用ref创建响应式数据\r\n        const state = reactive({\r\n            currentTime: 0, // 当前时间\r\n            duration: 0,    // 总时间\r\n            progressBarWidth: 0, // 进度条宽度\r\n            isDragging: false\r\n        });\r\n\r\n        watch(() => props.isplay, (newVal, nowVal) => {\r\n            // console.log('新值:',newVal), '旧值:',nowVal;\r\n            if (newVal >= 0) {\r\n                if (props.isplay == props.inNum) {\r\n                    // toggleVideo()\r\n                    isplayer.value = true\r\n                    console.log('新值:', newVal), '旧值:', nowVal;\r\n                } else {\r\n                    isplayer.value = false\r\n                }\r\n\r\n            }\r\n        });\r\n        const toggleVideo = () => {\r\n            if (isplayer.value == false) {\r\n                videoRef.value.play();\r\n                videoRef.value.currentTime = 0;\r\n                console.log('video鼠标点击播放');\r\n                isplayer.value = true\r\n                \r\n\r\n            } else {\r\n                videoRef.value.pause();\r\n                console.log('video鼠标点击暂停');\r\n\r\n                isplayer.value = false\r\n            }\r\n        };\r\n        watch(isplayer, (newValue, oldValue) => {\r\n            // newValue ? videoRef.value.play() : videoRef.value.pause();\r\n            if (newValue) {\r\n                videoRef.value.play();\r\n                isplayer.value = true\r\n            } else {\r\n\r\n                videoRef.value.pause();\r\n                isplayer.value = false\r\n            }\r\n        })\r\n        // 组件挂载时添加事件监听\r\n        onMounted(() => {\r\n            window.addEventListener('keydown', handleSpacebar);\r\n        });\r\n\r\n        // 组件卸载时移除事件监听\r\n        onUnmounted(() => {\r\n            window.removeEventListener('keydown', handleSpacebar);\r\n        });\r\n        function handleSpacebar(event) {\r\n            if (event.code === 'Space' && props.isplay == props.inNum) {\r\n                event.preventDefault(); // 阻止默认行为\r\n                console.log('空格video');\r\n                toggleVideo()\r\n            }\r\n        }\r\n        watch(() => state.currentTime, (newTime) => {\r\n            state.progressBarWidth = (newTime / state.duration) * 100;\r\n            if (state.progressBarWidth >= 100) {\r\n                isplayer.value = false\r\n            }\r\n\r\n        });\r\n        // 获取video总时间\r\n        function setDuration() {\r\n            videoRef.value && (state.duration = videoRef.value.duration)\r\n        }\r\n        // 更新视频播放的当前时间 当视频正在播放时 state.currentTime\r\n        function updateProgress() {\r\n            videoRef.value && (state.currentTime = videoRef.value.currentTime);\r\n        }\r\n        \r\n        function handleMouseDown(event) {\r\n            // 鼠标按下时的逻辑\r\n            // isDragging.value = true;\r\n            // console.log('hhhhhhhhhhhhhhhhhhh');\r\n            event.preventDefault();\r\n            const bar = event.currentTarget; // 1822px\r\n            //    console.log(bar);\r\n            const clickX = event.offsetX;\r\n            // console.log(clickX);\r\n            const newTime = (clickX / bar.offsetWidth) * state.duration;\r\n            state.currentTime = newTime\r\n            videoRef.value.currentTime = newTime;\r\n\r\n        }\r\n\r\n        function seekVideo(event) {\r\n\r\n            const bar = event.currentTarget; // 1822px\r\n            //    console.log(bar);\r\n            const clickX = event.offsetX;\r\n            // console.log(clickX);\r\n            const newTime = (clickX / bar.offsetWidth) * state.duration;\r\n            state.currentTime = newTime\r\n            videoRef.value.currentTime = newTime;\r\n        }\r\n\r\n        const startDrag = (event) => {\r\n            state.isDragging = true;\r\n            event.stopPropagation(); // 阻止事件冒泡\r\n            document.addEventListener('mousemove', onDrag);\r\n            document.addEventListener('mouseup', stopDrag);\r\n\r\n            event.preventDefault(); // 阻止默认行为\r\n\r\n        };\r\n\r\n        const onDrag = (event) => {\r\n            if (state.isDragging) {\r\n                event.preventDefault();\r\n                const barRect = bar_cont.value.getBoundingClientRect();\r\n                const clickX = event.clientX - barRect.left;\r\n\r\n                isShow.value = true\r\n                const newTime = (clickX / bar_cont.value.offsetWidth) * state.duration;\r\n                videoRef.value.currentTime = newTime;\r\n                state.currentTime = newTime\r\n                event.preventDefault();\r\n            }\r\n        };\r\n        const stopDrag = (event) => {\r\n            if (state.isDragging) {\r\n                state.isDragging = false;\r\n                document.removeEventListener('mousemove', onDrag);\r\n                document.removeEventListener('mouseup', stopDrag);\r\n                event.stopPropagation();\r\n                isShow.value = false\r\n            }\r\n        };\r\n        const formattedCurrentTime = computed(() => formatTime(state.currentTime));// 当前时间\r\n        const formattedDuration = computed(() => formatTime(state.duration));// 总时间\r\n        function formatTime(time) {\r\n            const minutes = Math.floor(time / 60).toString().padStart(2, '0');\r\n            const seconds = Math.floor(time % 60).toString().padStart(2, '0');\r\n            return `${minutes}:${seconds}`;\r\n        }\r\n\r\n\r\n        return {\r\n            videoRef,\r\n            state,\r\n            stopDrag,\r\n            setDuration,\r\n            seekVideo,\r\n            isShow,\r\n            startDrag,\r\n            onDrag,\r\n            formatTime,\r\n            formattedCurrentTime,\r\n            formattedDuration,\r\n            bar_cont,\r\n            isplayer,\r\n            handleMouseDown,\r\n            toggleVideo,\r\n            updateProgress,\r\n        \r\n\r\n        };\r\n\r\n    }\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.video-container {\r\n    flex-direction: column;\r\n    display: flex;\r\n    position: relative;\r\n    height: 100%;\r\n    width: 95%;\r\n\r\n    .control-box {\r\n        position: absolute;\r\n        bottom: 0px;\r\n        overflow: hidden;\r\n        width: 100%;\r\n        padding-top: 20px;\r\n        height: 50px;\r\n\r\n        .control {\r\n\r\n            width: 100%;\r\n\r\n            height: 50px;\r\n            background-image: linear-gradient(#3332323d 0%, rgba(0, 0, -9, 0.6) 100%);\r\n\r\n            .progress-box {\r\n                width: 100%;\r\n                height: 13px;\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n\r\n                .progress-bar-container.active {\r\n                    height: 6px;\r\n                    background: #cfcfcf;\r\n                    font-size: 30px;\r\n                    width: 100% !important;\r\n                    transform-origin: center;\r\n                }\r\n\r\n                .progress-bar-container {\r\n                    width: 100%;\r\n                    height: 2px;\r\n                    margin-bottom: 8px;\r\n                    background-color: #5e686b;\r\n                    cursor: pointer;\r\n                    border-radius: 3px;\r\n                    transform-origin: center;\r\n\r\n\r\n                    .progress-bar {\r\n                        height: 100%;\r\n                        border-radius: 3px;\r\n                        background-color: #b3baba;\r\n                        position: relative;\r\n                        transition: width 0.5s ease;\r\n                    }\r\n\r\n                    .progress-bar.active {\r\n                        background-color: transparent;\r\n                    }\r\n\r\n                    .progress-thumb {\r\n                        position: absolute;\r\n                        cursor: pointer;\r\n                        bottom: 0;\r\n                        /* z-index: 9999; */\r\n                        top: 16px;\r\n                        left: 100%;\r\n                        width: 13px;\r\n                        display: none;\r\n                        height: 13px;\r\n                        border-radius: 50%;\r\n                        background-color: #ffffff;\r\n                        /* 小圆点的颜色 */\r\n                        transform: translateX(-50%);\r\n                        /* 居中对齐 */\r\n                        box-shadow: 0 0 0 5px rgb(221 221 221 / 31%);\r\n                        cursor: pointer;\r\n                        /* Add any additional styling you want */\r\n                    }\r\n\r\n                    .progress-thumb.active {\r\n                        display: block;\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            .left-grid {\r\n                float: left;\r\n                height: 30px;\r\n                width: 400px;\r\n                display: flex;\r\n                flex-direction: row;\r\n\r\n                .play-cont {\r\n                    width: 24px;\r\n                    height: 100%;\r\n                    padding: 0 6px 0 16px;\r\n\r\n                    .play-icon {\r\n                        display: -webkit-box;\r\n                        display: -ms-flexbox;\r\n                        display: flex;\r\n                        -webkit-box-pack: center;\r\n                        -ms-flex-pack: center;\r\n                        justify-content: center;\r\n                        -webkit-box-align: center;\r\n                        -ms-flex-align: center;\r\n                        align-items: center;\r\n                        height: 100%;\r\n                        color: #fff;\r\n                        cursor: pointer;\r\n\r\n                        div.play-icon {\r\n                            width: 22px;\r\n                            height: 22px;\r\n                            background: no-repeat;\r\n                            background-image: url('./../../public/icon_svg/player_icon.svg');\r\n                        }\r\n\r\n                        div.pause-icon {\r\n                            width: 22px;\r\n                            height: 22px;\r\n                            background: no-repeat;\r\n                            background-image: url('./../../public/icon_svg/pause_icon.svg');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                .player-time {\r\n                    color: #fff;\r\n                    height: 30px;\r\n                    line-height: 30px;\r\n\r\n\r\n                    span {\r\n                        font-family: PingFang SC, DFPKingGothicGB-Medium, sans-serif;\r\n                        font-size: 15px;\r\n                        font-weight: 1000;\r\n                        line-height: 18px;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .right-grid {\r\n                float: right;\r\n                height: 30px;\r\n                width: 400px;\r\n                display: flex;\r\n                flex-direction: row;\r\n            }\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}