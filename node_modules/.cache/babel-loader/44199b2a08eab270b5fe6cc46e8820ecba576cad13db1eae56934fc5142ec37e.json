{"ast":null,"code":"import { ref, reactive, watch, onMounted, computed, onUnmounted, onBeforeUnmount } from 'vue';\nexport default {\n  // props: ['mp4Url', 'isplay', 'inNum'],\n  props: {\n    mp4Url: String,\n    isplay: Number,\n    inNum: Number\n  },\n  setup(props) {\n    const isShow = ref(false);\n    const bar_cont = ref(null);\n    const videoRef = ref(null);\n    const isplayer = ref(false); // 使用ref创建响应式数据\n    const state = reactive({\n      currentTime: 0,\n      // 当前时间\n      duration: 0,\n      // 总时间\n      progressBarWidth: 0 // 进度条宽度\n    });\n    watch(() => props.isplay, (newVal, nowVal) => {\n      if (newVal >= 0) {\n        if (props.isplay == props.inNum) {\n          isplayer.value = true;\n          // console.log('新值:', newVal), '旧值:', nowVal;\n        } else {\n          isplayer.value = false;\n        }\n      }\n    });\n\n    // 暂停 播放 控制\n    const toggleVideo = () => {\n      if (isplayer.value == false) {\n        videoRef.value.play();\n        // videoRef.value.currentTime = 0;\n        isplayer.value = true;\n      } else {\n        videoRef.value.pause();\n        isplayer.value = false;\n      }\n    };\n    watch(isplayer, (newValue, oldValue) => {\n      if (newValue) {\n        videoRef.value.play();\n        isplayer.value = true;\n      } else {\n        videoRef.value.pause();\n        isplayer.value = false;\n      }\n    });\n    // 组件挂载时添加事件监听\n    onMounted(() => {\n      document.addEventListener('keydown', handleSpacebar);\n    });\n\n    // 组件卸载时移除事件监听\n    onUnmounted(() => {\n      document.removeEventListener('keydown', handleSpacebar);\n    });\n    //空格键播放暂停\n    function handleSpacebar(event) {\n      if (event.code === 'Space' && props.isplay == props.inNum) {\n        toggleVideo();\n      }\n    }\n    // 它用于监听 state.currentTime 的变化\n    watch(() => state.currentTime, newTime => {\n      state.progressBarWidth = newTime / state.duration * 100;\n      if (state.progressBarWidth >= 100) {\n        isplayer.value = false;\n      }\n    });\n    // 获取video总时间\n    function setDuration() {\n      videoRef.value && (state.duration = videoRef.value.duration);\n    }\n    // 更新视频播放的当前时间 当视频正在播放时 state.currentTime\n    function updateProgress() {\n      videoRef.value && (state.currentTime = videoRef.value.currentTime);\n    }\n    function handleMouseDown(event) {\n      event.preventDefault();\n      const bar = event.currentTarget; // 1822px\n      const clickX = event.offsetX;\n      const newTime = clickX / bar.offsetWidth * state.duration;\n      state.currentTime = newTime;\n      videoRef.value.currentTime = newTime;\n    }\n    const onDrag = event => {\n      const barRect = bar_cont.value.getBoundingClientRect();\n      const clickX = event.clientX - barRect.left;\n      isShow.value = true;\n      const newTime = clickX / bar_cont.value.offsetWidth * state.duration;\n      videoRef.value.currentTime = newTime;\n      state.currentTime = newTime;\n    };\n    const startDrag = event => {\n      event.stopPropagation(); // 阻止事件冒泡\n      event.preventDefault(); // 阻止默认行为\n      document.addEventListener('mousemove', onDrag);\n      document.addEventListener('mouseup', stopDrag);\n    };\n    const stopDrag = event => {\n      document.removeEventListener('mousemove', onDrag);\n      document.removeEventListener('mouseup', stopDrag);\n      event.stopPropagation();\n      isShow.value = false;\n    };\n    const formattedCurrentTime = computed(() => formatTime(state.currentTime)); // 当前时间\n    const formattedDuration = computed(() => formatTime(state.duration)); // 总时间\n    function formatTime(time) {\n      const minutes = Math.floor(time / 60).toString().padStart(2, '0');\n      const seconds = Math.floor(time % 60).toString().padStart(2, '0');\n      return `${minutes}:${seconds}`;\n    }\n    return {\n      videoRef,\n      state,\n      stopDrag,\n      setDuration,\n      isShow,\n      startDrag,\n      onDrag,\n      formatTime,\n      formattedCurrentTime,\n      formattedDuration,\n      bar_cont,\n      isplayer,\n      handleMouseDown,\n      toggleVideo,\n      updateProgress\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","watch","onMounted","computed","onUnmounted","onBeforeUnmount","props","mp4Url","String","isplay","Number","inNum","setup","isShow","bar_cont","videoRef","isplayer","state","currentTime","duration","progressBarWidth","newVal","nowVal","value","toggleVideo","play","pause","newValue","oldValue","document","addEventListener","handleSpacebar","removeEventListener","event","code","newTime","setDuration","updateProgress","handleMouseDown","preventDefault","bar","currentTarget","clickX","offsetX","offsetWidth","onDrag","barRect","getBoundingClientRect","clientX","left","startDrag","stopPropagation","stopDrag","formattedCurrentTime","formatTime","formattedDuration","time","minutes","Math","floor","toString","padStart","seconds"],"sources":["D:\\vue3\\video\\src\\components\\video.vue"],"sourcesContent":["<template>\r\n    <div class=\"video-container\">\r\n        <video style=\"height: 90vh;\" ref=\"videoRef\" @click=\"toggleVideo\" preload=\"metadata\" @timeupdate=\"updateProgress\"\r\n            @loadedmetadata=\"setDuration\">\r\n            <source :src=\"mp4Url\" type=\"video/mp4\" />\r\n        </video>\r\n        <div class=\"control-box\">\r\n            <div class=\"control\">\r\n                <div class=\"progress-box\" @mouseover=\"isShow = true\" @mouseleave=\"isShow = false\">\r\n                    <div ref=\"bar_cont\" class=\"progress-bar-container\" :class=\"{ active: isShow }\"\r\n                        @mousedown=\"handleMouseDown\">\r\n                        <div class=\"progress-bar\" :style=\"{ width: state.progressBarWidth + '%' }\"\r\n                            :class=\"{ active: isShow }\"></div>\r\n                        <div class=\"progress-thumb\" :style=\"{ left: state.progressBarWidth + '%' }\"\r\n                            @mousedown=\"startDrag\" :class=\"{ active: isShow, }\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"left-grid\">\r\n                    <div class=\"play-cont\">\r\n                        <span class=\"play-icon\">\r\n                            <div class=\"play-icon\" :class=\"{ 'pause-icon': isplayer }\"></div>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"player-time\">\r\n                        <span>{{ formattedCurrentTime }}</span>\r\n                        <span> / </span>\r\n                        <span>{{ formattedDuration }}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-grid\">\r\n                    <!-- <span>{{ inNum }}</span> -->\r\n                    <button class=\"douyin-clear-screen-btn\">\r\n                        <span class=\"icon-clear-screen\"></span>\r\n                        清屏\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { ref, reactive, watch, onMounted, computed, onUnmounted, onBeforeUnmount, } from 'vue';\r\n\r\nexport default ({\r\n    // props: ['mp4Url', 'isplay', 'inNum'],\r\n    props: {\r\n        mp4Url: String,\r\n        isplay: Number,\r\n        inNum: Number\r\n    },\r\n    setup(props) {\r\n        const isShow = ref(false)\r\n        const bar_cont = ref(null)\r\n        const videoRef = ref(null);\r\n        const isplayer = ref(false); // 使用ref创建响应式数据\r\n        const state = reactive({\r\n            currentTime: 0, // 当前时间\r\n            duration: 0,    // 总时间\r\n            progressBarWidth: 0, // 进度条宽度\r\n        });\r\n        watch(() => props.isplay, (newVal, nowVal) => {\r\n            if (newVal >= 0) {\r\n                if (props.isplay == props.inNum) {\r\n                    isplayer.value = true\r\n                    // console.log('新值:', newVal), '旧值:', nowVal;\r\n                } else {\r\n                    isplayer.value = false\r\n                }\r\n            }\r\n        });\r\n\r\n        // 暂停 播放 控制\r\n        const toggleVideo = () => {\r\n            if (isplayer.value == false) {\r\n                videoRef.value.play();\r\n                // videoRef.value.currentTime = 0;\r\n                isplayer.value = true\r\n            } else {\r\n                videoRef.value.pause();\r\n                isplayer.value = false\r\n            }\r\n        };\r\n        watch(isplayer, (newValue, oldValue) => {\r\n            if (newValue) {\r\n                videoRef.value.play();\r\n                isplayer.value = true\r\n            } else {\r\n                videoRef.value.pause();\r\n                isplayer.value = false\r\n            }\r\n        })\r\n        // 组件挂载时添加事件监听\r\n        onMounted(() => {\r\n            document.addEventListener('keydown', handleSpacebar);\r\n        });\r\n\r\n        // 组件卸载时移除事件监听\r\n        onUnmounted(() => {\r\n            document.removeEventListener('keydown', handleSpacebar);\r\n        });\r\n        //空格键播放暂停\r\n        function handleSpacebar(event) {\r\n            if (event.code === 'Space' && props.isplay == props.inNum) {\r\n                toggleVideo()\r\n            }\r\n        }\r\n        // 它用于监听 state.currentTime 的变化\r\n        watch(() => state.currentTime, (newTime) => {\r\n            state.progressBarWidth = (newTime / state.duration) * 100;\r\n            if (state.progressBarWidth >= 100) {\r\n                isplayer.value = false\r\n            }\r\n        });\r\n        // 获取video总时间\r\n        function setDuration() {\r\n            videoRef.value && (state.duration = videoRef.value.duration)\r\n        }\r\n        // 更新视频播放的当前时间 当视频正在播放时 state.currentTime\r\n        function updateProgress() {\r\n            videoRef.value && (state.currentTime = videoRef.value.currentTime);\r\n        }\r\n\r\n        function handleMouseDown(event) {\r\n            event.preventDefault();\r\n            const bar = event.currentTarget; // 1822px\r\n            const clickX = event.offsetX;\r\n            const newTime = (clickX / bar.offsetWidth) * state.duration;\r\n            state.currentTime = newTime\r\n            videoRef.value.currentTime = newTime;\r\n        }\r\n\r\n        const onDrag = (event) => {\r\n            const barRect = bar_cont.value.getBoundingClientRect();\r\n            const clickX = event.clientX - barRect.left;\r\n            isShow.value = true\r\n            const newTime = (clickX / bar_cont.value.offsetWidth) * state.duration;\r\n            videoRef.value.currentTime = newTime;\r\n            state.currentTime = newTime\r\n        };\r\n        const startDrag = (event) => {\r\n            event.stopPropagation(); // 阻止事件冒泡\r\n            event.preventDefault(); // 阻止默认行为\r\n            document.addEventListener('mousemove', onDrag);\r\n            document.addEventListener('mouseup', stopDrag);\r\n        };\r\n        const stopDrag = (event) => {\r\n            document.removeEventListener('mousemove', onDrag);\r\n            document.removeEventListener('mouseup', stopDrag);\r\n            event.stopPropagation();\r\n            isShow.value = false\r\n        };\r\n        const formattedCurrentTime = computed(() => formatTime(state.currentTime));// 当前时间\r\n        const formattedDuration = computed(() => formatTime(state.duration));// 总时间\r\n        function formatTime(time) {\r\n            const minutes = Math.floor(time / 60).toString().padStart(2, '0');\r\n            const seconds = Math.floor(time % 60).toString().padStart(2, '0');\r\n            return `${minutes}:${seconds}`;\r\n        }\r\n        return {\r\n            videoRef,\r\n            state,\r\n            stopDrag,\r\n            setDuration,\r\n            isShow,\r\n            startDrag,\r\n            onDrag,\r\n            formatTime,\r\n            formattedCurrentTime,\r\n            formattedDuration,\r\n            bar_cont,\r\n            isplayer,\r\n            handleMouseDown,\r\n            toggleVideo,\r\n            updateProgress,\r\n        };\r\n\r\n    }\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.video-container {\r\n    flex-direction: column;\r\n    display: flex;\r\n    position: relative;\r\n    height: 100%;\r\n    width: 95%;\r\n\r\n    .control-box {\r\n        position: absolute;\r\n        bottom: 0px;\r\n        overflow: hidden;\r\n        width: 100%;\r\n        padding-top: 20px;\r\n        height: 50px;\r\n\r\n        .control {\r\n\r\n            width: 100%;\r\n\r\n            height: 50px;\r\n            background-image: linear-gradient(#3332323d 0%, rgba(0, 0, -9, 0.6) 100%);\r\n\r\n            .progress-box {\r\n                width: 100%;\r\n                height: 13px;\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n\r\n                .progress-bar-container.active {\r\n                    height: 6px;\r\n                    background: #cfcfcf;\r\n                    font-size: 30px;\r\n                    width: 100% !important;\r\n                    transform-origin: center;\r\n                }\r\n\r\n                .progress-bar-container {\r\n                    width: 100%;\r\n                    height: 2px;\r\n                    margin-bottom: 8px;\r\n                    background-color: #5e686b;\r\n                    cursor: pointer;\r\n                    border-radius: 3px;\r\n                    transform-origin: center;\r\n\r\n\r\n                    .progress-bar {\r\n                        height: 100%;\r\n                        border-radius: 3px;\r\n                        background-color: #b3baba;\r\n                        position: relative;\r\n                        transition: width 0.5s ease;\r\n                    }\r\n\r\n                    .progress-bar.active {\r\n                        background-color: transparent;\r\n                    }\r\n\r\n                    .progress-thumb {\r\n                        position: absolute;\r\n                        cursor: pointer;\r\n                        bottom: 0;\r\n                        /* z-index: 9999; */\r\n                        top: 16px;\r\n                        left: 100%;\r\n                        width: 13px;\r\n                        display: none;\r\n                        height: 13px;\r\n                        border-radius: 50%;\r\n                        background-color: #ffffff;\r\n                        /* 小圆点的颜色 */\r\n                        transform: translateX(-50%);\r\n                        /* 居中对齐 */\r\n                        box-shadow: 0 0 0 5px rgb(221 221 221 / 31%);\r\n                        cursor: pointer;\r\n                        /* Add any additional styling you want */\r\n                    }\r\n\r\n                    .progress-thumb.active {\r\n                        display: block;\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            .left-grid {\r\n                float: left;\r\n                height: 30px;\r\n                width: 400px;\r\n                display: flex;\r\n                flex-direction: row;\r\n\r\n                .play-cont {\r\n                    width: 24px;\r\n                    height: 100%;\r\n                    padding: 0 6px 0 16px;\r\n\r\n                    .play-icon {\r\n                        display: -webkit-box;\r\n                        display: -ms-flexbox;\r\n                        display: flex;\r\n                        -webkit-box-pack: center;\r\n                        -ms-flex-pack: center;\r\n                        justify-content: center;\r\n                        -webkit-box-align: center;\r\n                        -ms-flex-align: center;\r\n                        align-items: center;\r\n                        height: 100%;\r\n                        color: #fff;\r\n                        cursor: pointer;\r\n\r\n                        div.play-icon {\r\n                            width: 22px;\r\n                            height: 22px;\r\n                            background: no-repeat;\r\n                            background-image: url('./../../public/icon_svg/player_icon.svg');\r\n                        }\r\n\r\n                        div.pause-icon {\r\n                            width: 22px;\r\n                            height: 22px;\r\n                            background: no-repeat;\r\n                            background-image: url('./../../public/icon_svg/pause_icon.svg');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                .player-time {\r\n                    color: #fff;\r\n                    height: 30px;\r\n                    line-height: 30px;\r\n\r\n\r\n                    span {\r\n                        font-family: PingFang SC, DFPKingGothicGB-Medium, sans-serif;\r\n                        font-size: 15px;\r\n                        font-weight: 1000;\r\n                        line-height: 18px;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .right-grid {\r\n                float: right;\r\n                height: 30px;\r\n                width: 400px;\r\n                display: flex;\r\n                flex-direction: row;\r\n            }\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n}\r\n.douyin-clear-screen-btn {\r\n  bottom: 20px;\r\n  right: 20px;\r\n  z-index: 100;\r\n  width: 150px;\r\n  height: 35px;\r\n  background-color: #6f499b;\r\n  border: none;\r\n  border-radius: 25px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n \r\n.douyin-clear-screen-btn:hover {\r\n  background-color: #53388c;\r\n}\r\n \r\n.icon-clear-screen {\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n  vertical-align: middle;\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: #fff;\r\n  border-radius: 50%;\r\n  /* 这里使用伪元素来创建一个圆形图标 */\r\n  position: relative;\r\n}\r\n \r\n.icon-clear-screen::before,\r\n.icon-clear-screen::after {\r\n  content: '';\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n \r\n.icon-clear-screen::before {\r\n  width: 10px;\r\n  height: 10px;\r\n  background-color: #fff;\r\n  border-radius: 50%;\r\n}\r\n \r\n.icon-clear-screen::after {\r\n  width: 4px;\r\n  height: 20px;\r\n  background-color: #fff;\r\n  transform: translate(-50%, -50%) rotate(45deg);\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}