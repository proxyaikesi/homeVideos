{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7271a9ca\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"video-container\",\n  style: {\n    \"background\": \"#666\"\n  }\n};\nconst _hoisted_2 = [\"loop\", \"muted\"];\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"video\",\n  style: {\n    \"height\": \"90vh\"\n  }\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"video\", {\n    ref: \"videoRef\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.toggleVideo && $setup.toggleVideo(...args)),\n    preload: \"metadata\",\n    loop: $setup.isLooping,\n    onTimeupdate: _cache[1] || (_cache[1] = (...args) => $setup.updateProgress && $setup.updateProgress(...args)),\n    onContextmenu: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"])),\n    muted: $setup.isMuted,\n    onLoadedmetadata: _cache[3] || (_cache[3] = (...args) => $setup.setDuration && $setup.setDuration(...args))\n  }, [_createElementVNode(\"source\", {\n    type: \"video/mp4\",\n    src: $props.mp4Url\n  }, null, 8 /* PROPS */, _hoisted_3)], 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_2), _hoisted_4]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","_createElementBlock","_hoisted_1","ref","onClick","_cache","args","$setup","toggleVideo","preload","loop","isLooping","onTimeupdate","updateProgress","onContextmenu","_withModifiers","muted","isMuted","onLoadedmetadata","setDuration","type","src","$props","mp4Url","_hoisted_4"],"sources":["D:\\vue3\\video\\src\\components\\video.vue"],"sourcesContent":["<template>\r\n    <div class=\"video-container\" style=\"background: #666;\">\r\n        <video  ref=\"videoRef\" @click=\"toggleVideo\" preload=\"metadata\" :loop=\"isLooping\"\r\n            @timeupdate=\"updateProgress\" @contextmenu.prevent :muted=\"isMuted\" @loadedmetadata=\"setDuration\">\r\n            <source type=\"video/mp4\" :src=\"mp4Url\" />\r\n        </video>\r\n        <div class=\"video\" style=\"height: 90vh;\"></div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { ref, reactive, watch, onMounted, computed, onUnmounted, onBeforeUnmount, inject } from 'vue';\r\n\r\nexport default ({\r\n    // props: ['mp4Url', 'isplay', 'inNum'],\r\n    props: {\r\n        mp4Url: String,\r\n        isplay: Number,\r\n        inNum: Number\r\n    },\r\n    setup(props) {\r\n        const isMuted = inject('isMuted')\r\n        const isLooping = inject('isLooping');\r\n        const isShow = ref(false)\r\n        const isActive = ref(false);\r\n        const bar_cont = ref(null)\r\n        const videoRef = ref(null);\r\n        const isPlaying = ref(false); // 使用ref创建响应式数据\r\n        const state = reactive({\r\n            currentTime: 0, // 当前时间\r\n            duration: 0,    // 总时间\r\n            progressBarWidth: 0, // 进度条宽度\r\n        });\r\n        let hideTimeout;\r\n        const speeds = ref(['0.75x', '1x', '1.25x', '1.5x', '1.75x', '2x', '3x']);\r\n        const optionsVisible = ref(false); // 控制播放速度选项的显示\r\n        const toggleMute = () => {\r\n            isMuted.value = !isMuted.value;\r\n        };\r\n        const toggleloop = () => {\r\n            isLooping.value = !isLooping.value;\r\n        };\r\n        // 显示播放速度选项\r\n        // 鼠标输入显示选项\r\n        const showOptions = () => {\r\n            optionsVisible.value = true;\r\n\r\n        };\r\n        // 隐藏播放速度选项\r\n        // 鼠标离开隐藏选项\r\n        const hideOptions = () => {\r\n            hideOptionsWithDelay()\r\n        };\r\n        // 鼠标输入保持选项可见\r\n        const keepOptionsVisible = () => {\r\n            optionsVisible.value = true;\r\n            // if (hideTimeout) {\r\n\r\n            clearTimeout(hideTimeout); // 当鼠标移入选项框时，清除延迟\r\n            // }\r\n        };\r\n        // 鼠标离开隐藏选项WithDelay\r\n        const hideOptionsWithDelay = () => {\r\n            hideTimeout = setTimeout(() => {\r\n                optionsVisible.value = false;\r\n            }, 300); // 延迟300毫秒后隐藏选项框\r\n        };\r\n        // 设置播放速度的函数\r\n        const setPlaybackSpeed = (speed) => {\r\n            // 这里应该有代码来改变视频播放器的播放速度\r\n            videoRef.value.playbackRate = parseFloat(speed)\r\n        };\r\n        watch(() => props.isplay, (newVal, nowVal) => {\r\n            if (newVal >= 0) {\r\n                if (props.isplay == props.inNum) {\r\n                    isPlaying.value = true\r\n                    videoRef.value.play();\r\n                } else {\r\n                    videoRef.value.pause();\r\n                    isPlaying.value = false\r\n\r\n                }\r\n            }\r\n        });\r\n        function toggleSwitch() {\r\n            isActive.value = !isActive.value;\r\n        }\r\n        const toggleVideo = () => {\r\n            if (videoRef.value.paused) {\r\n                videoRef.value.play();\r\n                isPlaying.value = true;\r\n            } else {\r\n                videoRef.value.pause();\r\n                isPlaying.value = false;\r\n            }\r\n        };\r\n\r\n        // 组件挂载时添加事件监听\r\n        onMounted(() => {\r\n            document.addEventListener('keydown', handleSpacebar);\r\n            videoRef.value.addEventListener('ended', () => {\r\n                isPlaying.value = false;\r\n            });\r\n            // 监听视频结束事件\r\n           \r\n\r\n           \r\n          \r\n        });\r\n\r\n        // 组件卸载时移除事件监听\r\n        onUnmounted(() => {\r\n            document.removeEventListener('keydown', handleSpacebar);\r\n        });\r\n        //空格键播放暂停\r\n        function handleSpacebar(event) {\r\n            if (event.code === 'Space' && props.isplay == props.inNum) {\r\n                toggleVideo()\r\n            }\r\n        }\r\n        // 它用于监听 state.currentTime 的变化\r\n        watch(() => state.currentTime, (newTime) => {\r\n            state.progressBarWidth = (newTime / state.duration) * 100;\r\n\r\n        });\r\n        // 获取video总时间\r\n        function setDuration() {\r\n            videoRef.value && (state.duration = videoRef.value.duration)\r\n        }\r\n        // 更新视频播放的当前时间 当视频正在播放时 state.currentTime\r\n        function updateProgress() {\r\n            videoRef.value && (state.currentTime = videoRef.value.currentTime);\r\n        }\r\n\r\n        function handleMouseDown(event) {\r\n            event.preventDefault();\r\n            const bar = event.currentTarget; // 1822px\r\n            const clickX = event.offsetX;\r\n            const newTime = (clickX / bar.offsetWidth) * state.duration;\r\n            state.currentTime = newTime\r\n            videoRef.value.currentTime = newTime;\r\n        }\r\n\r\n        const onDrag = (event) => {\r\n            const barRect = bar_cont.value.getBoundingClientRect();\r\n            const clickX = event.clientX - barRect.left;\r\n            isShow.value = true\r\n            const newTime = (clickX / bar_cont.value.offsetWidth) * state.duration;\r\n            videoRef.value.currentTime = newTime;\r\n            state.currentTime = newTime\r\n        };\r\n        const startDrag = (event) => {\r\n            event.stopPropagation(); // 阻止事件冒泡\r\n            event.preventDefault(); // 阻止默认行为\r\n            \r\n            document.addEventListener('mousemove', onDrag);\r\n            document.addEventListener('mouseup', stopDrag);\r\n        };\r\n        const stopDrag = (event) => {\r\n            document.removeEventListener('mousemove', onDrag);\r\n            document.removeEventListener('mouseup', stopDrag);\r\n            event.stopPropagation();\r\n            toggleVideo()\r\n            // isShow.value = false\r\n            setTimeout(() => {\r\n                isShow.value = false\r\n            }, 100);\r\n        };\r\n        const formattedCurrentTime = computed(() => formatTime(state.currentTime));// 当前时间\r\n        const formattedDuration = computed(() => formatTime(state.duration));// 总时间\r\n        function formatTime(time) {\r\n            const minutes = Math.floor(time / 60).toString().padStart(2, '0');\r\n            const seconds = Math.floor(time % 60).toString().padStart(2, '0');\r\n            return `${minutes}:${seconds}`;\r\n        }\r\n        return {\r\n            videoRef,\r\n            state,\r\n            stopDrag,\r\n            setDuration,\r\n            isShow,\r\n            startDrag,\r\n            onDrag,\r\n            formatTime,\r\n            formattedCurrentTime,\r\n            formattedDuration,\r\n            bar_cont,\r\n            isPlaying,\r\n            handleMouseDown,\r\n            toggleVideo,\r\n            updateProgress,\r\n            isActive,\r\n            toggleSwitch,\r\n            speeds,\r\n            optionsVisible,\r\n            showOptions,\r\n            hideOptions,\r\n            setPlaybackSpeed,\r\n            hideTimeout,\r\n            keepOptionsVisible,\r\n            hideOptionsWithDelay,\r\n            isMuted, toggleMute, isLooping, toggleloop\r\n        };\r\n\r\n    }\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.video-container {\r\n    flex-direction: column;\r\n    display: flex;\r\n    position: relative;\r\n    height: 100%;\r\n    width: 95%;\r\n    video{\r\n        width: 100%;\r\n        height: 90vh;\r\n        margin: 0px;\r\n        overflow: hidden;\r\n        padding: 0px;\r\n        border: 0px;\r\n    }\r\n\r\n    .control-box {\r\n        position: absolute;\r\n        bottom: 0px;\r\n        overflow: hidden;\r\n        padding-top: 20px;\r\n        width: 100%;\r\n        height: 50px;\r\n\r\n        .control {\r\n\r\n            width: 100%;\r\n\r\n            height: 50px;\r\n            background-image: linear-gradient(#3332323d 0%, rgba(0, 0, -9, 0.6) 100%);\r\n\r\n            .progress-box {\r\n                width: 100%;\r\n                height: 13px;\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n\r\n                .progress-bar-container.active {\r\n                    height: 6px;\r\n                    background: #cfcfcf;\r\n                    font-size: 30px;\r\n                    width: 100% !important;\r\n                    transform-origin: center;\r\n                }\r\n\r\n                .progress-bar-container {\r\n                    width: 100%;\r\n                    height: 2px;\r\n                    margin-bottom: 8px;\r\n                    background-color: #5e686b;\r\n                    cursor: pointer;\r\n                    border-radius: 3px;\r\n                    transform-origin: center;\r\n\r\n\r\n                    .progress-bar {\r\n                        height: 100%;\r\n                        border-radius: 3px;\r\n                        background-color: #b3baba;\r\n                        position: relative;\r\n                        transition: width 0.5s ease;\r\n                    }\r\n\r\n                    .progress-bar.active {\r\n                        background-color: transparent;\r\n                    }\r\n\r\n                    .progress-thumb {\r\n                        position: absolute;\r\n                        cursor: pointer;\r\n                        bottom: 0;\r\n                        /* z-index: 9999; */\r\n                        top: 16px;\r\n                        left: 100%;\r\n                        width: 13px;\r\n                        display: none;\r\n                        height: 13px;\r\n                        border-radius: 50%;\r\n                        background-color: #ffffff;\r\n                        /* 小圆点的颜色 */\r\n                        transform: translateX(-50%);\r\n                        /* 居中对齐 */\r\n                        box-shadow: 0 0 0 5px rgb(221 221 221 / 31%);\r\n                        cursor: pointer;\r\n                        /* Add any additional styling you want */\r\n                    }\r\n\r\n                    .progress-thumb.active {\r\n                        display: block;\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            .left-grid {\r\n                float: left;\r\n                height: 30px;\r\n                width: 400px;\r\n                display: flex;\r\n                flex-direction: row;\r\n\r\n                .play-cont {\r\n                    width: 24px;\r\n                    height: 100%;\r\n                    padding: 0 6px 0 16px;\r\n\r\n                    .play-icon {\r\n                        display: -webkit-box;\r\n                        display: -ms-flexbox;\r\n                        display: flex;\r\n                        -webkit-box-pack: center;\r\n                        -ms-flex-pack: center;\r\n                        justify-content: center;\r\n                        -webkit-box-align: center;\r\n                        -ms-flex-align: center;\r\n                        align-items: center;\r\n                        height: 100%;\r\n                        color: #fff;\r\n                        cursor: pointer;\r\n\r\n                        div.play-icon {\r\n                            width: 22px;\r\n                            height: 22px;\r\n                            background: no-repeat;\r\n                            background-image: url('./../../public/icon_svg/player_icon.svg');\r\n                        }\r\n\r\n                        div.pause-icon {\r\n                            width: 22px;\r\n                            height: 22px;\r\n                            background: no-repeat;\r\n                            background-image: url('./../../public/icon_svg/pause_icon.svg');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                .player-time {\r\n                    color: #fff;\r\n                    height: 30px;\r\n                    line-height: 30px;\r\n\r\n\r\n                    span {\r\n                        font-family: PingFang SC, DFPKingGothicGB-Medium, sans-serif;\r\n                        font-size: 15px;\r\n                        font-weight: 1000;\r\n                        line-height: 18px;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .right-grid {\r\n                float: right;\r\n                height: 30px;\r\n                width: 300px;\r\n                display: flex;\r\n                flex-direction: row;\r\n\r\n                .clear-screen {\r\n                    color: #fff;\r\n                    display: flex;\r\n                    padding: 0 10px;\r\n                    font-weight: 600;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    cursor: pointer;\r\n                    font-size: 14px;\r\n                    -webkit-user-select: none;\r\n                    -moz-user-select: none;\r\n                    -ms-user-select: none;\r\n                    user-select: none;\r\n\r\n                    .toggle-switch {\r\n                        position: relative;\r\n                        width: 35px;\r\n                        height: 16px;\r\n                        background-color: #bcbdc2;\r\n                        border-radius: 25px;\r\n                        margin-top: 2px;\r\n                        transition: background-color 0.3s;\r\n                    }\r\n\r\n                    .toggle-switch.active {\r\n                        background-color: #e81554;\r\n                    }\r\n\r\n                    .toggle-switch.active:before {\r\n                        left: 20px;\r\n                    }\r\n\r\n                    .toggle-switch:before {\r\n                        content: \"\";\r\n                        position: absolute;\r\n                        top: 2px;\r\n                        left: 5px;\r\n                        width: 11px;\r\n                        height: 11px;\r\n                        background-color: white;\r\n                        border-radius: 50%;\r\n                        transition: left 0.3s;\r\n                    }\r\n\r\n                }\r\n\r\n                .double-speed {\r\n                    position: relative;\r\n                    display: inline-block;\r\n                    font-size: 14px;\r\n                    font-weight: 600;\r\n                    font-size: 14px;\r\n                    color: #fff;\r\n\r\n                    .speed-label {\r\n                        padding: 5px 10px;\r\n                        cursor: pointer;\r\n                        font-size: 14px;\r\n                    }\r\n                }\r\n\r\n                .muted {\r\n                    padding: 0 10px;\r\n                    cursor: pointer;\r\n                    -webkit-user-select: none;\r\n                    -moz-user-select: none;\r\n                    -ms-user-select: none;\r\n                    user-select: none;\r\n\r\n                    .muted-icon {\r\n                        width: 20px;\r\n                        height: 20px;\r\n                        text-align: center;\r\n                        margin-top: 5px;\r\n                        background: url('./../../public/icon_svg/muted_icon.svg');\r\n                        background-repeat: no-repeat;\r\n                    }\r\n\r\n                    .muted-icon.active {\r\n                        background: url('./../../public/icon_svg/unmuted_icon.svg');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .speed-options {\r\n        list-style: none;\r\n        height: auto;\r\n        width: 57px;\r\n        right: 46px;\r\n        position: absolute;\r\n        border-radius: 12px;\r\n        padding: 20px 0 0;\r\n        display: block;\r\n        background: #343540;\r\n        bottom: 50px;\r\n\r\n        .speed-option {\r\n            width: 100%;\r\n            text-align: center;\r\n            opacity: .7;\r\n            cursor: pointer;\r\n            margin-bottom: 16px;\r\n            line-height: 18px;\r\n            color: #5e686b;\r\n            font-size: 14px;\r\n            font-weight: 600px;\r\n        }\r\n    }\r\n\r\n}\r\n</style>\r\n"],"mappings":";;;EACSA,KAAK,EAAC,iBAAiB;EAACC,KAAyB,EAAzB;IAAA;EAAA;;;;gEAKzBC,mBAAA,CAA+C;EAA1CF,KAAK,EAAC,OAAO;EAACC,KAAqB,EAArB;IAAA;EAAA;;;uBALvBE,mBAAA,CAMM,OANNC,UAMM,GALFF,mBAAA,CAGQ;IAHAG,GAAG,EAAC,UAAU;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,WAAA,IAAAD,MAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAEG,OAAO,EAAC,UAAU;IAAEC,IAAI,EAAEH,MAAA,CAAAI,SAAS;IAC1EC,YAAU,EAAAP,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAM,cAAA,IAAAN,MAAA,CAAAM,cAAA,IAAAP,IAAA,CAAc;IAAGQ,aAAW,EAAAT,MAAA,QAAAA,MAAA,MAAAU,cAAA,CAAZ,QAAoB;IAAEC,KAAK,EAAET,MAAA,CAAAU,OAAO;IAAGC,gBAAc,EAAAb,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAY,WAAA,IAAAZ,MAAA,CAAAY,WAAA,IAAAb,IAAA,CAAW;MAC/FN,mBAAA,CAAyC;IAAjCoB,IAAI,EAAC,WAAW;IAAEC,GAAG,EAAEC,MAAA,CAAAC;qFAEnCC,UAA+C,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}