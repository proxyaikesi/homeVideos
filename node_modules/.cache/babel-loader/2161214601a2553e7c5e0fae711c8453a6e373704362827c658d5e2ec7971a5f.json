{"ast":null,"code":"import { ref, reactive, watch, onMounted, computed, onUnmounted, onBeforeUnmount, inject } from 'vue';\nexport default {\n  // props: ['mp4Url', 'isplay', 'inNum'],\n  props: {\n    mp4Url: String,\n    isplay: Number,\n    inNum: Number\n  },\n  setup(props) {\n    const isMuted = inject('isMuted');\n    const isLooping = inject('isLooping');\n    const isShow = ref(false);\n    const isActive = ref(false);\n    const bar_cont = ref(null);\n    const videoRef = ref(null);\n    const isplayer = ref(false); // 使用ref创建响应式数据\n    const state = reactive({\n      currentTime: 0,\n      // 当前时间\n      duration: 0,\n      // 总时间\n      progressBarWidth: 0 // 进度条宽度\n    });\n    let hideTimeout;\n    const speeds = ref(['0.75x', '1x', '1.25x', '1.5x', '1.75x', '2x', '3x']);\n    const optionsVisible = ref(false); // 控制播放速度选项的显示\n    const toggleMute = () => {\n      isMuted.value = !isMuted.value;\n    };\n    const toggleloop = () => {\n      isLooping.value = !isLooping.value;\n    };\n    // 显示播放速度选项\n    // 鼠标输入显示选项\n    const showOptions = () => {\n      optionsVisible.value = true;\n    };\n    // 隐藏播放速度选项\n    // 鼠标离开隐藏选项\n    const hideOptions = () => {\n      hideOptionsWithDelay();\n    };\n    // 鼠标输入保持选项可见\n    const keepOptionsVisible = () => {\n      optionsVisible.value = true;\n      // if (hideTimeout) {\n\n      clearTimeout(hideTimeout); // 当鼠标移入选项框时，清除延迟\n      // }\n    };\n    // 鼠标离开隐藏选项WithDelay\n    const hideOptionsWithDelay = () => {\n      hideTimeout = setTimeout(() => {\n        optionsVisible.value = false;\n      }, 300); // 延迟300毫秒后隐藏选项框\n    };\n    // 设置播放速度的函数\n    const setPlaybackSpeed = speed => {\n      // 这里应该有代码来改变视频播放器的播放速度\n\n      console.log(videoRef.value.playbackRate = parseFloat(speed));\n      console.log(`播放速度设置为: ${speed}`);\n    };\n    watch(() => props.isplay, (newVal, nowVal) => {\n      if (newVal >= 0) {\n        if (props.isplay == props.inNum) {\n          isplayer.value = true;\n          // console.log('新值:', newVal), '旧值:', nowVal;\n        } else {\n          isplayer.value = false;\n        }\n      }\n    });\n    function toggleSwitch() {\n      isActive.value = !isActive.value;\n    }\n\n    // 暂停 播放 控制\n    const toggleVideo = () => {\n      if (isplayer.value == false) {\n        videoRef.value.play();\n        // videoRef.value.currentTime = 0;\n        isplayer.value = true;\n      } else {\n        videoRef.value.pause();\n        isplayer.value = false;\n      }\n    };\n    watch(isplayer, (newValue, oldValue) => {\n      if (newValue) {\n        videoRef.value.play();\n        isplayer.value = true;\n      } else {\n        videoRef.value.pause();\n        isplayer.value = false;\n      }\n    });\n    // 组件挂载时添加事件监听\n    onMounted(() => {\n      document.addEventListener('keydown', handleSpacebar);\n    });\n\n    // 组件卸载时移除事件监听\n    onUnmounted(() => {\n      document.removeEventListener('keydown', handleSpacebar);\n    });\n    //空格键播放暂停\n    function handleSpacebar(event) {\n      if (event.code === 'Space' && props.isplay == props.inNum) {\n        toggleVideo();\n      }\n    }\n    // 它用于监听 state.currentTime 的变化\n    watch(() => state.currentTime, newTime => {\n      state.progressBarWidth = newTime / state.duration * 100;\n      if (state.progressBarWidth >= 100) {\n        isplayer.value = false;\n      }\n    });\n    // 获取video总时间\n    function setDuration() {\n      videoRef.value && (state.duration = videoRef.value.duration);\n    }\n    // 更新视频播放的当前时间 当视频正在播放时 state.currentTime\n    function updateProgress() {\n      videoRef.value && (state.currentTime = videoRef.value.currentTime);\n    }\n    function handleMouseDown(event) {\n      event.preventDefault();\n      const bar = event.currentTarget; // 1822px\n      const clickX = event.offsetX;\n      const newTime = clickX / bar.offsetWidth * state.duration;\n      state.currentTime = newTime;\n      videoRef.value.currentTime = newTime;\n    }\n    const onDrag = event => {\n      const barRect = bar_cont.value.getBoundingClientRect();\n      const clickX = event.clientX - barRect.left;\n      isShow.value = true;\n      const newTime = clickX / bar_cont.value.offsetWidth * state.duration;\n      videoRef.value.currentTime = newTime;\n      state.currentTime = newTime;\n    };\n    const startDrag = event => {\n      event.stopPropagation(); // 阻止事件冒泡\n      event.preventDefault(); // 阻止默认行为\n      document.addEventListener('mousemove', onDrag);\n      document.addEventListener('mouseup', stopDrag);\n    };\n    const stopDrag = event => {\n      document.removeEventListener('mousemove', onDrag);\n      document.removeEventListener('mouseup', stopDrag);\n      event.stopPropagation();\n      isShow.value = false;\n    };\n    const formattedCurrentTime = computed(() => formatTime(state.currentTime)); // 当前时间\n    const formattedDuration = computed(() => formatTime(state.duration)); // 总时间\n    function formatTime(time) {\n      const minutes = Math.floor(time / 60).toString().padStart(2, '0');\n      const seconds = Math.floor(time % 60).toString().padStart(2, '0');\n      return `${minutes}:${seconds}`;\n    }\n    return {\n      videoRef,\n      state,\n      stopDrag,\n      setDuration,\n      isShow,\n      startDrag,\n      onDrag,\n      formatTime,\n      formattedCurrentTime,\n      formattedDuration,\n      bar_cont,\n      isplayer,\n      handleMouseDown,\n      toggleVideo,\n      updateProgress,\n      isActive,\n      toggleSwitch,\n      speeds,\n      optionsVisible,\n      showOptions,\n      hideOptions,\n      setPlaybackSpeed,\n      hideTimeout,\n      keepOptionsVisible,\n      hideOptionsWithDelay,\n      isMuted,\n      toggleMute,\n      isLooping\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","watch","onMounted","computed","onUnmounted","onBeforeUnmount","inject","props","mp4Url","String","isplay","Number","inNum","setup","isMuted","isLooping","isShow","isActive","bar_cont","videoRef","isplayer","state","currentTime","duration","progressBarWidth","hideTimeout","speeds","optionsVisible","toggleMute","value","toggleloop","showOptions","hideOptions","hideOptionsWithDelay","keepOptionsVisible","clearTimeout","setTimeout","setPlaybackSpeed","speed","console","log","playbackRate","parseFloat","newVal","nowVal","toggleSwitch","toggleVideo","play","pause","newValue","oldValue","document","addEventListener","handleSpacebar","removeEventListener","event","code","newTime","setDuration","updateProgress","handleMouseDown","preventDefault","bar","currentTarget","clickX","offsetX","offsetWidth","onDrag","barRect","getBoundingClientRect","clientX","left","startDrag","stopPropagation","stopDrag","formattedCurrentTime","formatTime","formattedDuration","time","minutes","Math","floor","toString","padStart","seconds"],"sources":["D:\\vue3\\video\\src\\components\\video.vue"],"sourcesContent":["<template>\r\n    <div class=\"video-container\">\r\n        <video style=\"height: 90vh;\" ref=\"videoRef\" @click=\"toggleVideo\" preload=\"metadata\"  :loop=\"isLooping\"  @timeupdate=\"updateProgress\"\r\n            @contextmenu.prevent :muted=\"isMuted\" @loadedmetadata=\"setDuration\">\r\n            <source type=\"video/mp4\" :src=\"mp4Url\" />\r\n        </video>\r\n        <div class=\"control-box\">\r\n            <div class=\"control\">\r\n                <div class=\"progress-box\" @mouseover=\"isShow = true\" @mouseleave=\"isShow = false\">\r\n                    <div ref=\"bar_cont\" class=\"progress-bar-container\" :class=\"{ active: isShow }\"\r\n                        @mousedown=\"handleMouseDown\">\r\n                        <div class=\"progress-bar\" :style=\"{ width: state.progressBarWidth + '%' }\"\r\n                            :class=\"{ active: isShow }\"></div>\r\n                        <div class=\"progress-thumb\" :style=\"{ left: state.progressBarWidth + '%' }\"\r\n                            @mousedown=\"startDrag\" :class=\"{ active: isShow, }\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"left-grid\">\r\n                    <div class=\"play-cont\">\r\n                        <span class=\"play-icon\">\r\n                            <div class=\"play-icon\" :class=\"{ 'pause-icon': isplayer }\"></div>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"player-time\">\r\n                        <span>{{ formattedCurrentTime }}</span>\r\n                        <span> / </span>\r\n                        <span>{{ formattedDuration }}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-grid\">\r\n                    <!-- <span>{{ inNum }}</span> -->\r\n                    <div class=\"clear-screen\" @click=\"toggleSwitch\">\r\n                        <div class=\"toggle-switch\" :class=\"{ active: isActive }\"></div>\r\n                        &nbsp;清屏\r\n                    </div>\r\n                    <div class=\"clear-screen\" @click=\"toggleloop\">\r\n                        <div class=\"toggle-switch\" :class=\"{ active: isLooping }\"></div>\r\n                        &nbsp;循环播放\r\n                    </div>\r\n                    <div class=\"double-speed\">\r\n                        <div class=\"speed-label\" @mouseenter=\"showOptions\" @mouseleave=\"hideOptions\">倍速</div>\r\n                    </div>\r\n                    <div class=\"muted\" @click=\"toggleMute\">\r\n                        <div class=\"muted-icon\" :class=\"{active : isMuted}\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ul class=\"speed-options\" v-show=\"optionsVisible\" @mouseenter=\"keepOptionsVisible\"\r\n            @mouseleave=\"hideOptionsWithDelay\">\r\n            <li class=\"speed-option\" v-for=\"speed in speeds\" :key=\"speed\" @click=\"setPlaybackSpeed(speed)\">\r\n                {{ speed }}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { ref, reactive, watch, onMounted, computed, onUnmounted, onBeforeUnmount,inject  } from 'vue';\r\n\r\nexport default ({\r\n    // props: ['mp4Url', 'isplay', 'inNum'],\r\n    props: {\r\n        mp4Url: String,\r\n        isplay: Number,\r\n        inNum: Number\r\n    },\r\n    setup(props) {\r\n        const isMuted = inject('isMuted')\r\n        const isLooping = inject('isLooping');\r\n        const isShow = ref(false)\r\n        const isActive = ref(false);\r\n        const bar_cont = ref(null)\r\n        const videoRef = ref(null);\r\n        const isplayer = ref(false); // 使用ref创建响应式数据\r\n        const state = reactive({\r\n            currentTime: 0, // 当前时间\r\n            duration: 0,    // 总时间\r\n            progressBarWidth: 0, // 进度条宽度\r\n        });\r\n        let hideTimeout;\r\n        const speeds = ref(['0.75x', '1x', '1.25x', '1.5x', '1.75x', '2x', '3x']);\r\n        const optionsVisible = ref(false); // 控制播放速度选项的显示\r\n        const toggleMute = () => {\r\n            isMuted.value = !isMuted.value;\r\n        };\r\n        const toggleloop = () => {\r\n            isLooping.value = !isLooping.value;\r\n        };\r\n        // 显示播放速度选项\r\n        // 鼠标输入显示选项\r\n        const showOptions = () => {\r\n            optionsVisible.value = true;\r\n\r\n        };\r\n        // 隐藏播放速度选项\r\n        // 鼠标离开隐藏选项\r\n        const hideOptions = () => {\r\n            hideOptionsWithDelay()\r\n        };\r\n        // 鼠标输入保持选项可见\r\n        const keepOptionsVisible = () => {\r\n            optionsVisible.value = true;\r\n            // if (hideTimeout) {\r\n\r\n            clearTimeout(hideTimeout); // 当鼠标移入选项框时，清除延迟\r\n            // }\r\n        };\r\n        // 鼠标离开隐藏选项WithDelay\r\n        const hideOptionsWithDelay = () => {\r\n            hideTimeout = setTimeout(() => {\r\n                optionsVisible.value = false;\r\n            }, 300); // 延迟300毫秒后隐藏选项框\r\n        };\r\n        // 设置播放速度的函数\r\n        const setPlaybackSpeed = (speed) => {\r\n            // 这里应该有代码来改变视频播放器的播放速度\r\n\r\n            console.log(videoRef.value.playbackRate = parseFloat(speed));\r\n            console.log(`播放速度设置为: ${speed}`);\r\n        };\r\n        watch(() => props.isplay, (newVal, nowVal) => {\r\n            if (newVal >= 0) {\r\n                if (props.isplay == props.inNum) {\r\n                    isplayer.value = true\r\n                    // console.log('新值:', newVal), '旧值:', nowVal;\r\n                } else {\r\n                    isplayer.value = false\r\n                }\r\n            }\r\n        });\r\n        function toggleSwitch() {\r\n            isActive.value = !isActive.value;\r\n        }\r\n\r\n        // 暂停 播放 控制\r\n        const toggleVideo = () => {\r\n            if (isplayer.value == false) {\r\n                videoRef.value.play();\r\n                // videoRef.value.currentTime = 0;\r\n                isplayer.value = true\r\n            } else {\r\n                videoRef.value.pause();\r\n                isplayer.value = false\r\n            }\r\n        };\r\n        watch(isplayer, (newValue, oldValue) => {\r\n            if (newValue) {\r\n                videoRef.value.play();\r\n                isplayer.value = true\r\n            } else {\r\n                videoRef.value.pause();\r\n                isplayer.value = false\r\n            }\r\n        })\r\n        // 组件挂载时添加事件监听\r\n        onMounted(() => {\r\n            document.addEventListener('keydown', handleSpacebar);\r\n        });\r\n\r\n        // 组件卸载时移除事件监听\r\n        onUnmounted(() => {\r\n            document.removeEventListener('keydown', handleSpacebar);\r\n        });\r\n        //空格键播放暂停\r\n        function handleSpacebar(event) {\r\n            if (event.code === 'Space' && props.isplay == props.inNum) {\r\n                toggleVideo()\r\n            }\r\n        }\r\n        // 它用于监听 state.currentTime 的变化\r\n        watch(() => state.currentTime, (newTime) => {\r\n            state.progressBarWidth = (newTime / state.duration) * 100;\r\n            if (state.progressBarWidth >= 100) {\r\n                isplayer.value = false\r\n            }\r\n        });\r\n        // 获取video总时间\r\n        function setDuration() {\r\n            videoRef.value && (state.duration = videoRef.value.duration)\r\n        }\r\n        // 更新视频播放的当前时间 当视频正在播放时 state.currentTime\r\n        function updateProgress() {\r\n            videoRef.value && (state.currentTime = videoRef.value.currentTime);\r\n        }\r\n\r\n        function handleMouseDown(event) {\r\n            event.preventDefault();\r\n            const bar = event.currentTarget; // 1822px\r\n            const clickX = event.offsetX;\r\n            const newTime = (clickX / bar.offsetWidth) * state.duration;\r\n            state.currentTime = newTime\r\n            videoRef.value.currentTime = newTime;\r\n        }\r\n\r\n        const onDrag = (event) => {\r\n            const barRect = bar_cont.value.getBoundingClientRect();\r\n            const clickX = event.clientX - barRect.left;\r\n            isShow.value = true\r\n            const newTime = (clickX / bar_cont.value.offsetWidth) * state.duration;\r\n            videoRef.value.currentTime = newTime;\r\n            state.currentTime = newTime\r\n        };\r\n        const startDrag = (event) => {\r\n            event.stopPropagation(); // 阻止事件冒泡\r\n            event.preventDefault(); // 阻止默认行为\r\n            document.addEventListener('mousemove', onDrag);\r\n            document.addEventListener('mouseup', stopDrag);\r\n        };\r\n        const stopDrag = (event) => {\r\n            document.removeEventListener('mousemove', onDrag);\r\n            document.removeEventListener('mouseup', stopDrag);\r\n            event.stopPropagation();\r\n            isShow.value = false\r\n        };\r\n        const formattedCurrentTime = computed(() => formatTime(state.currentTime));// 当前时间\r\n        const formattedDuration = computed(() => formatTime(state.duration));// 总时间\r\n        function formatTime(time) {\r\n            const minutes = Math.floor(time / 60).toString().padStart(2, '0');\r\n            const seconds = Math.floor(time % 60).toString().padStart(2, '0');\r\n            return `${minutes}:${seconds}`;\r\n        }\r\n        return {\r\n            videoRef,\r\n            state,\r\n            stopDrag,\r\n            setDuration,\r\n            isShow,\r\n            startDrag,\r\n            onDrag,\r\n            formatTime,\r\n            formattedCurrentTime,\r\n            formattedDuration,\r\n            bar_cont,\r\n            isplayer,\r\n            handleMouseDown,\r\n            toggleVideo,\r\n            updateProgress,\r\n            isActive,\r\n            toggleSwitch,\r\n            speeds,\r\n            optionsVisible,\r\n            showOptions,\r\n            hideOptions,\r\n            setPlaybackSpeed,\r\n            hideTimeout,\r\n            keepOptionsVisible,\r\n            hideOptionsWithDelay,\r\n            isMuted,toggleMute,isLooping\r\n        };\r\n\r\n    }\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.video-container {\r\n    flex-direction: column;\r\n    display: flex;\r\n    position: relative;\r\n    height: 100%;\r\n    width: 95%;\r\n\r\n    .control-box {\r\n        position: absolute;\r\n        bottom: 0px;\r\n        overflow: hidden;\r\n        width: 100%;\r\n        padding-top: 20px;\r\n        height: 50px;\r\n\r\n        .control {\r\n\r\n            width: 100%;\r\n\r\n            height: 50px;\r\n            background-image: linear-gradient(#3332323d 0%, rgba(0, 0, -9, 0.6) 100%);\r\n\r\n            .progress-box {\r\n                width: 100%;\r\n                height: 13px;\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n\r\n                .progress-bar-container.active {\r\n                    height: 6px;\r\n                    background: #cfcfcf;\r\n                    font-size: 30px;\r\n                    width: 100% !important;\r\n                    transform-origin: center;\r\n                }\r\n\r\n                .progress-bar-container {\r\n                    width: 100%;\r\n                    height: 2px;\r\n                    margin-bottom: 8px;\r\n                    background-color: #5e686b;\r\n                    cursor: pointer;\r\n                    border-radius: 3px;\r\n                    transform-origin: center;\r\n\r\n\r\n                    .progress-bar {\r\n                        height: 100%;\r\n                        border-radius: 3px;\r\n                        background-color: #b3baba;\r\n                        position: relative;\r\n                        transition: width 0.5s ease;\r\n                    }\r\n\r\n                    .progress-bar.active {\r\n                        background-color: transparent;\r\n                    }\r\n\r\n                    .progress-thumb {\r\n                        position: absolute;\r\n                        cursor: pointer;\r\n                        bottom: 0;\r\n                        /* z-index: 9999; */\r\n                        top: 16px;\r\n                        left: 100%;\r\n                        width: 13px;\r\n                        display: none;\r\n                        height: 13px;\r\n                        border-radius: 50%;\r\n                        background-color: #ffffff;\r\n                        /* 小圆点的颜色 */\r\n                        transform: translateX(-50%);\r\n                        /* 居中对齐 */\r\n                        box-shadow: 0 0 0 5px rgb(221 221 221 / 31%);\r\n                        cursor: pointer;\r\n                        /* Add any additional styling you want */\r\n                    }\r\n\r\n                    .progress-thumb.active {\r\n                        display: block;\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            .left-grid {\r\n                float: left;\r\n                height: 30px;\r\n                width: 400px;\r\n                display: flex;\r\n                flex-direction: row;\r\n\r\n                .play-cont {\r\n                    width: 24px;\r\n                    height: 100%;\r\n                    padding: 0 6px 0 16px;\r\n\r\n                    .play-icon {\r\n                        display: -webkit-box;\r\n                        display: -ms-flexbox;\r\n                        display: flex;\r\n                        -webkit-box-pack: center;\r\n                        -ms-flex-pack: center;\r\n                        justify-content: center;\r\n                        -webkit-box-align: center;\r\n                        -ms-flex-align: center;\r\n                        align-items: center;\r\n                        height: 100%;\r\n                        color: #fff;\r\n                        cursor: pointer;\r\n\r\n                        div.play-icon {\r\n                            width: 22px;\r\n                            height: 22px;\r\n                            background: no-repeat;\r\n                            background-image: url('./../../public/icon_svg/player_icon.svg');\r\n                        }\r\n\r\n                        div.pause-icon {\r\n                            width: 22px;\r\n                            height: 22px;\r\n                            background: no-repeat;\r\n                            background-image: url('./../../public/icon_svg/pause_icon.svg');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                .player-time {\r\n                    color: #fff;\r\n                    height: 30px;\r\n                    line-height: 30px;\r\n\r\n\r\n                    span {\r\n                        font-family: PingFang SC, DFPKingGothicGB-Medium, sans-serif;\r\n                        font-size: 15px;\r\n                        font-weight: 1000;\r\n                        line-height: 18px;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .right-grid {\r\n                float: right;\r\n                height: 30px;\r\n                width: 300px;\r\n                display: flex;\r\n                flex-direction: row;\r\n\r\n                .clear-screen {\r\n                    color: #fff;\r\n                    display: flex;\r\n                    padding: 0 10px;\r\n                    font-weight: 600;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    cursor: pointer;\r\n                    font-size: 14px;\r\n                    -webkit-user-select: none;\r\n                    -moz-user-select: none;\r\n                    -ms-user-select: none;\r\n                    user-select: none;\r\n\r\n                    .toggle-switch {\r\n                        position: relative;\r\n                        width: 35px;\r\n                        height: 16px;\r\n                        background-color: #bcbdc2;\r\n                        border-radius: 25px;\r\n                        margin-top: 2px;\r\n                        transition: background-color 0.3s;\r\n                    }\r\n\r\n                    .toggle-switch.active {\r\n                        background-color: #e81554;\r\n                    }\r\n\r\n                    .toggle-switch.active:before {\r\n                        left: 20px;\r\n                    }\r\n\r\n                    .toggle-switch:before {\r\n                        content: \"\";\r\n                        position: absolute;\r\n                        top: 2px;\r\n                        left: 5px;\r\n                        width: 11px;\r\n                        height: 11px;\r\n                        background-color: white;\r\n                        border-radius: 50%;\r\n                        transition: left 0.3s;\r\n                    }\r\n\r\n                }\r\n\r\n                .double-speed {\r\n                    position: relative;\r\n                    display: inline-block;\r\n                    font-size: 14px;\r\n                    font-weight: 600;\r\n                    font-size: 14px;\r\n                    color: #fff;\r\n\r\n                    .speed-label {\r\n                        padding: 5px 10px;\r\n                        cursor: pointer;\r\n                        font-size: 14px;\r\n                    }\r\n                }\r\n\r\n                .muted {\r\n                    padding: 0 10px;\r\n                    cursor: pointer;\r\n                    -webkit-user-select: none;\r\n                    -moz-user-select: none;\r\n                    -ms-user-select: none;\r\n                    user-select: none;\r\n                    .muted-icon {\r\n                        width: 20px;\r\n                        height: 20px;\r\n                        text-align: center;\r\n                        margin-top: 5px;\r\n                        background: url('./../../public/icon_svg/muted_icon.svg');\r\n                        background-repeat: no-repeat;\r\n                    }\r\n                    .muted-icon.active{\r\n                        background: url('./../../public/icon_svg/unmuted_icon.svg');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .speed-options {\r\n        list-style: none;\r\n        height: auto;\r\n        width: 57px;\r\n        right: 46px;\r\n        position: absolute;\r\n        border-radius: 12px;\r\n        padding: 20px 0 0;\r\n        display: block;\r\n        background: #343540;\r\n        bottom: 50px;\r\n\r\n        .speed-option {\r\n            width: 100%;\r\n            text-align: center;\r\n            opacity: .7;\r\n            cursor: pointer;\r\n            margin-bottom: 16px;\r\n            line-height: 18px;\r\n            color: #5e686b;\r\n            font-size: 14px;\r\n            font-weight: 600px;\r\n        }\r\n    }\r\n\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}