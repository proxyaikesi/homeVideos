{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7271a9ca\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"source\", {\n  src: \"999\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"video\", {\n    id: \"videos\",\n    ref: \"refmp4\",\n    preload: \"auto\",\n    src: $props.mp4Url\n  }, [_createCommentVNode(\" {{ mp4Url }} \"), _hoisted_2], 8 /* PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementVNode","src","_createElementBlock","id","ref","preload","$props","mp4Url","_createCommentVNode","_hoisted_2"],"sources":["D:\\vue3\\video\\src\\components\\video.vue"],"sourcesContent":["<template>\r\n    <video id=\"videos\" ref=\"refmp4\"   preload=\"auto\" :src=\"mp4Url\" >\r\n        <!-- {{ mp4Url }} -->\r\n        <source src=\"999\">\r\n    </video>\r\n</template>\r\n<script>\r\nimport { number } from 'echarts'\r\nimport { fn } from 'moment-timezone'\r\nimport { reactive, ref, onMounted, onUpdated, useSlots, watch } from 'vue'\r\nexport default {\r\n    props: ['mp4Url', 'isplay','inNum'],\r\n    setup(props) {\r\n\r\n        const slot = useSlots()\r\n        const num = reactive({\r\n            videoNum: number\r\n        })\r\n        const refmp4 = ref(Array);\r\n        num.videoNum = props.isplay\r\n        onUpdated(() => {\r\n            if (props.inNum == props.isplay) {\r\n                num.videoNum = props.isplay\r\n                console.log(' refmp4.value', refmp4.value);\r\n                setTimeout(()=>{\r\n                    refmp4.value.play()\r\n                    \r\n                },500)\r\n               \r\n            }else{\r\n                refmp4.value.pause()\r\n                refmp4.value.currentTime=0\r\n            }\r\n            \r\n            // console.log(refmp4.value.play()); \r\n        })\r\n        function fnn(index){\r\n           console.log( refmp4.value.length);\r\n            // for(var i =0; i < refmp4.value.length; i++){\r\n            //     console.log('hhhhhhhhhhhhhhhhhhhhhhhh',index);\r\n            // }\r\n        }\r\n        watch(props, (newVal, oldVal) => {\r\n         \r\n\r\n            // if(oldVal.isplay ==  num.videoNum){\r\n            //     console.log('监听引用类型数据dataList',num.videoNum,newVal.isplay)\r\n            // }else{\r\n            // console.log('监听引aaaaaaaaa', newVal.isplay)\r\n            // console.log('sdsd', refmp4.value);\r\n\r\n            // refmp4.value.play()\r\n            // }\r\n\r\n            // console.log('new', newVal.isplay)\r\n            // console.log('old', oldVal.isplay)\r\n        })\r\n        return { refmp4, num }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\nvideo {\r\n    width: 100%;\r\n    height: 830px;\r\n}\r\n\r\nh2 {\r\n    color: #fff;\r\n    position: relative;\r\n    top: 0;\r\n    z-index: 10000;\r\n    font-size: 15px;\r\n\r\n}\r\n</style>\r\n  "],"mappings":";;;gEAGQA,mBAAA,CAAkB;EAAVC,GAAG,EAAC;AAAK;;;uBAFrBC,mBAAA,CAGQ;IAHDC,EAAE,EAAC,QAAQ;IAACC,GAAG,EAAC,QAAQ;IAAGC,OAAO,EAAC,MAAM;IAAEJ,GAAG,EAAEK,MAAA,CAAAC;MACnDC,mBAAA,kBAAqB,EACrBC,UAAkB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}