{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CustomVideo = _resolveComponent(\"CustomVideo\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"video-container\",\n    onScroll: _cache[0] || (_cache[0] = (...args) => $setup.handleScroll && $setup.handleScroll(...args))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.visibleVideos, (video, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: video.id,\n      class: \"video-item\"\n    }, [_createVNode(_component_CustomVideo, {\n      src: video.src,\n      title: video.title\n    }, null, 8 /* PROPS */, [\"src\", \"title\"])]);\n  }), 128 /* KEYED_FRAGMENT */))], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["_createElementBlock","class","onScroll","_cache","args","$setup","handleScroll","_Fragment","_renderList","visibleVideos","video","index","key","id","_createVNode","_component_CustomVideo","src","title"],"sources":["D:\\vue3\\video\\src\\components\\index.vue"],"sourcesContent":["<template>\r\n  <div class=\"video-container\" @scroll=\"handleScroll\">\r\n    <div v-for=\"(video, index) in visibleVideos\" :key=\"video.id\" class=\"video-item\">\r\n      <CustomVideo :src=\"video.src\" :title=\"video.title\"></CustomVideo>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted } from \"vue\";\r\nimport CustomVideo from './CustomVideo.vue'\r\nexport default {\r\n  components: {\r\n    CustomVideo,\r\n  },\r\n  setup() {\r\n    // 假设 videos 是从后端接收到的视频数据数组\r\n    const videos = reactive([\r\n      { id: 1, src: \"http://localhost:3000/video/1716110835939_TikSave.io_7332553251478310152-hd.mp4.mp4\", title: \"Video 1\" },\r\n      { id: 2, src: \"http://localhost:3000/video/1716101838317_TikSave.io_7341508786114383122-hd.mp4.mp4\", title: \"Video 2\" },\r\n      { id: 3, src: \"http://localhost:3000/video/1716110864416_TikSave.io-7341064610973322514-(1080p).mp4.mp4\", title: \"Video 3\" },\r\n      { id: 4, src: \"http://localhost:3000/video/1716110877916_TikSave.io-7353063476912196885-(1080p).mp4.mp4\", title: \"Video 4\" },\r\n      // 其他视频数据...\r\n    ]);\r\n\r\n    // 可见的视频列表\r\n    const visibleVideos = ref([]);\r\n\r\n    // 每次加载的视频数量\r\n    const loadCount = 5;\r\n\r\n    // 当前加载的视频索引\r\n    let currentIndex = 0;\r\n\r\n    // 根据 currentIndex 更新可见视频列表\r\n    const updateVisibleVideos = () => {\r\n      visibleVideos.value = videos.slice(currentIndex, currentIndex + loadCount);\r\n    };\r\n\r\n    // 初始化时加载视频列表\r\n    onMounted(() => {\r\n      updateVisibleVideos();\r\n    });\r\n\r\n    // 处理滚动事件\r\n    const handleScroll = () => {\r\n      const container = document.querySelector(\".video-container\");\r\n      if (!container) return;\r\n\r\n      const { scrollTop, scrollHeight, clientHeight } = container;\r\n      if (scrollTop + clientHeight >= scrollHeight) {\r\n        // 到达底部时加载更多视频\r\n        currentIndex += loadCount;\r\n        updateVisibleVideos();\r\n      }\r\n    };\r\n\r\n    return {\r\n      visibleVideos,\r\n      handleScroll,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.video-container {\r\n  height: 100%;\r\n  overflow-y: auto;\r\n}\r\n\r\n.video-item {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;;uBACEA,mBAAA,CAIM;IAJDC,KAAK,EAAC,iBAAiB;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;yBAChDJ,mBAAA,CAEMO,SAAA,QAAAC,WAAA,CAFwBH,MAAA,CAAAI,aAAa,GAA9BC,KAAK,EAAEC,KAAK;yBAAzBX,mBAAA,CAEM;MAFwCY,GAAG,EAAEF,KAAK,CAACG,EAAE;MAAEZ,KAAK,EAAC;QACjEa,YAAA,CAAiEC,sBAAA;MAAnDC,GAAG,EAAEN,KAAK,CAACM,GAAG;MAAGC,KAAK,EAAEP,KAAK,CAACO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}